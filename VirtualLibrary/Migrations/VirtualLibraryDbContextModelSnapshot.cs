// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VirtualLibrary.Models;

#nullable disable

namespace VirtualLibrary.Migrations
{
    [DbContext(typeof(VirtualLibraryDbContext))]
    partial class VirtualLibraryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VirtualLibrary.Models.Article", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Articles__3214EC07EEECDBC9");

                    b.ToTable("Articles", (string)null);
                });

            modelBuilder.Entity("VirtualLibrary.Models.ArticleCopy", b =>
                {
                    b.Property<int>("CopyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CopyId"));

                    b.Property<int?>("ArticleId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("CopyId")
                        .HasName("PK__ArticleC__C26CCCC52B9680AC");

                    b.HasIndex("ArticleId");

                    b.HasIndex("ItemId");

                    b.HasIndex(new[] { "Version" }, "UQ__ArticleC__0F540134C210F98E")
                        .IsUnique();

                    b.ToTable("ArticleCopies", (string)null);
                });

            modelBuilder.Entity("VirtualLibrary.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Books__3214EC073A6D69FC");

                    b.ToTable("Books", (string)null);
                });

            modelBuilder.Entity("VirtualLibrary.Models.BookCopy", b =>
                {
                    b.Property<int>("CopyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CopyId"));

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("Isbn")
                        .HasColumnType("int")
                        .HasColumnName("ISBN");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int");

                    b.HasKey("CopyId")
                        .HasName("PK__BookCopi__C26CCCC5CA618E1F");

                    b.HasIndex("BookId");

                    b.HasIndex("ItemId");

                    b.HasIndex(new[] { "Isbn" }, "UQ__BookCopi__447D36EA0C097A99")
                        .IsUnique();

                    b.ToTable("BookCopies", (string)null);
                });

            modelBuilder.Entity("VirtualLibrary.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("PublishDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("PublisherId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Items__3214EC0751B5B6A0");

                    b.HasIndex("PublisherId");

                    b.ToTable("Items", (string)null);
                });

            modelBuilder.Entity("VirtualLibrary.Models.Magazine", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Magazine__3214EC0759E5CCA3");

                    b.ToTable("Magazines", (string)null);
                });

            modelBuilder.Entity("VirtualLibrary.Models.MagazineArticle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ArticleId")
                        .HasColumnType("int");

                    b.Property<int>("IssueNumber")
                        .HasColumnType("int");

                    b.Property<int?>("MagazineId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Magazine__3214EC070EA99B31");

                    b.HasIndex("ArticleId");

                    b.HasIndex("MagazineId");

                    b.HasIndex(new[] { "IssueNumber" }, "UQ__Magazine__5703F26C46E00E74")
                        .IsUnique();

                    b.ToTable("MagazineArticle", (string)null);
                });

            modelBuilder.Entity("VirtualLibrary.Models.MagazineCopy", b =>
                {
                    b.Property<int>("CopyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CopyId"));

                    b.Property<int>("IssureNumber")
                        .HasColumnType("int");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int");

                    b.Property<int?>("MagazineId")
                        .HasColumnType("int");

                    b.HasKey("CopyId")
                        .HasName("PK__Magazine__C26CCCC55F07A4AA");

                    b.HasIndex("ItemId");

                    b.HasIndex("MagazineId");

                    b.HasIndex(new[] { "IssureNumber" }, "UQ__Magazine__F1B3FFCC9771C23A")
                        .IsUnique();

                    b.ToTable("MagazineCopies", (string)null);
                });

            modelBuilder.Entity("VirtualLibrary.Models.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Publishe__3214EC0789315C32");

                    b.ToTable("Publishers", (string)null);
                });

            modelBuilder.Entity("VirtualLibrary.Models.ArticleCopy", b =>
                {
                    b.HasOne("VirtualLibrary.Models.Article", "Article")
                        .WithMany("ArticleCopies")
                        .HasForeignKey("ArticleId")
                        .HasConstraintName("FK__ArticleCo__Artic__3A81B327");

                    b.HasOne("VirtualLibrary.Models.Item", "Item")
                        .WithMany("ArticleCopies")
                        .HasForeignKey("ItemId")
                        .HasConstraintName("FK__ArticleCo__ItemI__3B75D760");

                    b.Navigation("Article");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("VirtualLibrary.Models.BookCopy", b =>
                {
                    b.HasOne("VirtualLibrary.Models.Book", "Book")
                        .WithMany("BookCopies")
                        .HasForeignKey("BookId")
                        .HasConstraintName("FK__BookCopie__BookI__35BCFE0A");

                    b.HasOne("VirtualLibrary.Models.Item", "Item")
                        .WithMany("BookCopies")
                        .HasForeignKey("ItemId")
                        .HasConstraintName("FK__BookCopie__ItemI__36B12243");

                    b.Navigation("Book");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("VirtualLibrary.Models.Item", b =>
                {
                    b.HasOne("VirtualLibrary.Models.Publisher", "Publisher")
                        .WithMany("Items")
                        .HasForeignKey("PublisherId")
                        .HasConstraintName("FK__Items__Publisher__276EDEB3");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("VirtualLibrary.Models.MagazineArticle", b =>
                {
                    b.HasOne("VirtualLibrary.Models.Article", "Article")
                        .WithMany("MagazineArticles")
                        .HasForeignKey("ArticleId")
                        .HasConstraintName("FK__MagazineA__Artic__31EC6D26");

                    b.HasOne("VirtualLibrary.Models.Magazine", "Magazine")
                        .WithMany("MagazineArticles")
                        .HasForeignKey("MagazineId")
                        .HasConstraintName("FK__MagazineA__Magaz__30F848ED");

                    b.Navigation("Article");

                    b.Navigation("Magazine");
                });

            modelBuilder.Entity("VirtualLibrary.Models.MagazineCopy", b =>
                {
                    b.HasOne("VirtualLibrary.Models.Item", "Item")
                        .WithMany("MagazineCopies")
                        .HasForeignKey("ItemId")
                        .HasConstraintName("FK__MagazineC__ItemI__403A8C7D");

                    b.HasOne("VirtualLibrary.Models.Magazine", "Magazine")
                        .WithMany("MagazineCopies")
                        .HasForeignKey("MagazineId")
                        .HasConstraintName("FK__MagazineC__Magaz__3F466844");

                    b.Navigation("Item");

                    b.Navigation("Magazine");
                });

            modelBuilder.Entity("VirtualLibrary.Models.Article", b =>
                {
                    b.Navigation("ArticleCopies");

                    b.Navigation("MagazineArticles");
                });

            modelBuilder.Entity("VirtualLibrary.Models.Book", b =>
                {
                    b.Navigation("BookCopies");
                });

            modelBuilder.Entity("VirtualLibrary.Models.Item", b =>
                {
                    b.Navigation("ArticleCopies");

                    b.Navigation("BookCopies");

                    b.Navigation("MagazineCopies");
                });

            modelBuilder.Entity("VirtualLibrary.Models.Magazine", b =>
                {
                    b.Navigation("MagazineArticles");

                    b.Navigation("MagazineCopies");
                });

            modelBuilder.Entity("VirtualLibrary.Models.Publisher", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
